{"ast":null,"code":"import\"antd/es/modal/style\";import _Modal from\"antd/es/modal\";import _slicedToArray from\"/Users/crocslut/Desktop/Content/myhealthcard-user/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import Footer from'../components/footer/Footer';import SettingsForm from'../components/settings/SettingsForm';import{updateSettings,resetSettings}from'../../redux/settings/actions';import{fetchPatients}from'../../redux/patients/actions';import className from'../../utils/class-names';import'./BaseLayout.scss';var patientsUrl='/data/patients.json';var BaseLayout=function BaseLayout(_ref){var nav=_ref.nav,topNav=_ref.topNav,sideNav=_ref.sideNav,orientation=_ref.orientation,children=_ref.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showSettings=_useState2[0],setShowSettings=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),scrolled=_useState4[0],setScrolled=_useState4[1];var dispatch=useDispatch();var sidebarOpened=useSelector(function(state){return state.settings.sidebarOpened;});var settings=useSelector(function(state){return state.settings;});var pageData=useSelector(function(state){return state.pageData;});useEffect(function(){dispatch(fetchPatients(patientsUrl));},[patientsUrl]);var handleScroll=function handleScroll(event){setScrolled(event.target.scrollTop>0);};var mainContentClasses=className({'main-content':true,loaded:pageData.loaded,fulfilled:pageData.fulFilled});var mainContentWrapClasses=className({'main-content-wrap':true});var onUpdateSettings=function onUpdateSettings(settings){return dispatch(updateSettings(settings));};var toggleSettings=function toggleSettings(){return setShowSettings(!showSettings);};var onResetSettings=function onResetSettings(){return dispatch(resetSettings());};var contentOverlay=/*#__PURE__*/React.createElement(\"div\",{className:className({'content-overlay':true,show:sidebarOpened})});return/*#__PURE__*/React.createElement(\"div\",{className:\"layout \".concat(orientation)},/*#__PURE__*/React.createElement(\"div\",{className:\"app-container \".concat(settings.boxed&&'boxed',\" \").concat(scrolled&&'scrolled')},nav,topNav,sideNav,/*#__PURE__*/React.createElement(\"main\",{onScroll:handleScroll,className:mainContentClasses},/*#__PURE__*/React.createElement(\"div\",{className:\"app-loader\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icofont-spinner-alt-4 rotate\"})),/*#__PURE__*/React.createElement(\"div\",{className:mainContentWrapClasses},pageData&&!!pageData.title&&/*#__PURE__*/React.createElement(\"header\",{className:\"page-header\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"page-title\"},pageData.title)),children)),/*#__PURE__*/React.createElement(Footer,{breadcrumbs:pageData.breadcrumbs,layout:settings.layout,boxed:settings.boxed,loaded:pageData.loaded,openModal:toggleSettings}),contentOverlay,/*#__PURE__*/React.createElement(_Modal,{visible:showSettings,onCancel:toggleSettings,footer:null,title:/*#__PURE__*/React.createElement(\"h3\",{className:\"m-0\",style:{opacity:0.8}},\"Settings\")},/*#__PURE__*/React.createElement(SettingsForm,{settings:settings,onResetSettings:onResetSettings,onUpdateSetting:onUpdateSettings}))));};export default BaseLayout;","map":{"version":3,"sources":["/Users/crocslut/Desktop/Content/myhealthcard-user/src/layout/base/BaseLayout.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Footer","SettingsForm","updateSettings","resetSettings","fetchPatients","className","patientsUrl","BaseLayout","nav","topNav","sideNav","orientation","children","showSettings","setShowSettings","scrolled","setScrolled","dispatch","sidebarOpened","state","settings","pageData","handleScroll","event","target","scrollTop","mainContentClasses","loaded","fulfilled","fulFilled","mainContentWrapClasses","onUpdateSettings","toggleSettings","onResetSettings","contentOverlay","show","boxed","title","breadcrumbs","layout","opacity"],"mappings":"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","sourcesContent":["import React, { ReactNode, useEffect, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Modal } from 'antd';\n\nimport Footer from '../components/footer/Footer';\nimport SettingsForm from '../components/settings/SettingsForm';\n\nimport { updateSettings, resetSettings } from '../../redux/settings/actions';\nimport { fetchPatients } from '../../redux/patients/actions';\n\nimport className from '../../utils/class-names';\n\nimport { IAppSettings } from '../../interfaces/settings';\nimport { IAppState } from '../../interfaces/app-state';\nimport { IPageData } from '../../interfaces/page';\n\nimport './BaseLayout.scss';\n\nconst patientsUrl = '/data/patients.json';\n\ntype Props = {\n  nav: ReactNode;\n  sideNav?: ReactNode;\n  topNav?: ReactNode;\n  children: ReactNode;\n  orientation: 'vertical' | 'horizontal';\n};\n\nconst BaseLayout = ({ nav, topNav, sideNav, orientation, children }: Props) => {\n  const [showSettings, setShowSettings] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const sidebarOpened = useSelector<IAppState, boolean>((state) => state.settings.sidebarOpened);\n  const settings = useSelector<IAppState, IAppSettings>((state) => state.settings);\n  const pageData = useSelector<IAppState, IPageData>((state) => state.pageData);\n\n  useEffect(() => {\n    dispatch(fetchPatients(patientsUrl));\n  }, [patientsUrl]);\n\n  const handleScroll = (event) => {\n    setScrolled(event.target.scrollTop > 0);\n  };\n\n  const mainContentClasses = className({\n    'main-content': true,\n    loaded: pageData.loaded,\n    fulfilled: pageData.fulFilled\n  });\n\n  const mainContentWrapClasses = className({\n    'main-content-wrap': true\n  });\n\n  const onUpdateSettings = (settings) => dispatch(updateSettings(settings));\n  const toggleSettings = () => setShowSettings(!showSettings);\n  const onResetSettings = () => dispatch(resetSettings());\n\n  const contentOverlay = (\n    <div\n      className={className({\n        'content-overlay': true,\n        show: sidebarOpened\n      })}\n    />\n  );\n\n  return (\n    <div className={`layout ${orientation}`}>\n      <div className={`app-container ${settings.boxed && 'boxed'} ${scrolled && 'scrolled'}`}>\n        {nav}\n\n        {topNav}\n\n        {sideNav}\n\n        <main onScroll={handleScroll} className={mainContentClasses}>\n          <div className='app-loader'>\n            <i className='icofont-spinner-alt-4 rotate' />\n          </div>\n\n          <div className={mainContentWrapClasses}>\n            {pageData && !!pageData.title && (\n              <header className='page-header'>\n                <h1 className='page-title'>{pageData.title}</h1>\n              </header>\n            )}\n            {children}\n          </div>\n        </main>\n\n        <Footer\n          breadcrumbs={pageData.breadcrumbs}\n          layout={settings.layout}\n          boxed={settings.boxed}\n          loaded={pageData.loaded}\n          openModal={toggleSettings}\n        />\n        {contentOverlay}\n        <Modal\n          visible={showSettings}\n          onCancel={toggleSettings}\n          footer={null}\n          title={\n            <h3 className='m-0' style={{ opacity: 0.8 }}>\n              Settings\n            </h3>\n          }\n        >\n          <SettingsForm\n            settings={settings}\n            onResetSettings={onResetSettings}\n            onUpdateSetting={onUpdateSettings}\n          />\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default BaseLayout;\n"]},"metadata":{},"sourceType":"module"}