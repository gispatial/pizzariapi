{"ast":null,"code":"import\"antd/es/auto-complete/style\";import _AutoComplete from\"antd/es/auto-complete\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import _slicedToArray from\"/Applications/MAMP/htdocs/v1/basic-starter-myhc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{history}from'../../../redux/store';import'./Search.scss';var Search=function Search(_ref){var data=_ref.data,_ref$layout=_ref.layout,layout=_ref$layout===void 0?'vertical':_ref$layout;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var handleSelect=function handleSelect(value,option){var route=value.startsWith('/')?value:\"/\".concat(layout,\"/\").concat(value);history.push(route);setText(option.label);};var handleChange=function handleChange(value){setText(value);};return/*#__PURE__*/React.createElement(_AutoComplete,{value:text,filterOption:true,options:data,className:\"app-search\",onChange:handleChange,onSelect:handleSelect},/*#__PURE__*/React.createElement(_Input,{placeholder:\"Type to search\",suffix:/*#__PURE__*/React.createElement(\"span\",{className:\"icofont icofont-search\"})}));};export default Search;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/v1/basic-starter-myhc/src/layout/components/search/Search.tsx"],"names":["React","useState","history","Search","data","layout","text","setText","handleSelect","value","option","route","startsWith","push","label","handleChange"],"mappings":"yTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAGA,OAASC,OAAT,KAAwB,sBAAxB,CAEA,MAAO,eAAP,CAOA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA0C,IAAvCC,CAAAA,IAAuC,MAAvCA,IAAuC,kBAAjCC,MAAiC,CAAjCA,MAAiC,sBAAxB,UAAwB,aACvD,cAAwBJ,QAAQ,CAAC,EAAD,CAAhC,wCAAOK,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAgBC,MAAhB,CAA2B,CAC9C,GAAMC,CAAAA,KAAK,CAAGF,KAAK,CAACG,UAAN,CAAiB,GAAjB,EAAwBH,KAAxB,YAAoCJ,MAApC,aAA8CI,KAA9C,CAAd,CACAP,OAAO,CAACW,IAAR,CAAaF,KAAb,EACAJ,OAAO,CAACG,MAAM,CAACI,KAAR,CAAP,CACD,CAJD,CAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACN,KAAD,CAAW,CAC9BF,OAAO,CAACE,KAAD,CAAP,CACD,CAFD,CAIA,mBACE,mCACE,KAAK,CAAEH,IADT,CAEE,YAAY,KAFd,CAGE,OAAO,CAAEF,IAHX,CAIE,SAAS,CAAC,YAJZ,CAKE,QAAQ,CAAEW,YALZ,CAME,QAAQ,CAAEP,YANZ,eAQE,4BAAO,WAAW,CAAC,gBAAnB,CAAoC,MAAM,cAAE,4BAAM,SAAS,CAAC,wBAAhB,EAA5C,EARF,CADF,CAYD,CAzBD,CA2BA,cAAeL,CAAAA,MAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { AutoComplete, Input } from 'antd';\nimport { history } from '../../../redux/store';\n\nimport './Search.scss';\n\ntype Props = {\n  data: { value: string; text: string }[];\n  layout: 'vertical' | 'horizontal';\n};\n\nconst Search = ({ data, layout = 'vertical' }: Props) => {\n  const [text, setText] = useState('');\n\n  const handleSelect = (value: string, option) => {\n    const route = value.startsWith('/') ? value : `/${layout}/${value}`;\n    history.push(route);\n    setText(option.label);\n  };\n\n  const handleChange = (value) => {\n    setText(value);\n  };\n\n  return (\n    <AutoComplete\n      value={text}\n      filterOption\n      options={data}\n      className='app-search'\n      onChange={handleChange}\n      onSelect={handleSelect}\n    >\n      <Input placeholder='Type to search' suffix={<span className='icofont icofont-search' />} />\n    </AutoComplete>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}